import React, { useState, useEffect } from 'react'
import ReactDOM from 'react-dom'
import { ConfigProvider } from 'antd'
import qs from 'qs'
import locale from 'antd/es/locale/<%= process.env.REACT_APP_LOCALE %>'
import * as serviceWorker from '@/serviceWorker'
import { render } from '@/app'
import { useSelector, shallowEqual } from 'react-redux'
import { useLocation } from 'react-router-dom'
import './dayjs'
import App, { app, store, history } from './app'

// If you want your app to work offline and load faster, you can change
// unregister() to register() below. Note this comes with some pitfalls.
// Learn more about service workers: https://bit.ly/CRA-PWA
serviceWorker.register()

function useModel(selector) {
  return useSelector(selector, shallowEqual)
}

history.switch = function (layout, route) {
  const { origin } = window.location
  const layoutPath = layout ? `/${layout}` : ''
  window.location.href = `${origin}${layoutPath}#${route}`
}

history.get = function (name) {
  const [, hashQuery = ''] = window.location.hash.split('?')
  const url = new URLSearchParams(hashQuery)

  if (name) return url.get(name)
}

history.set = function (name, value) {
  const [hash, hashQuery = ''] = window.location.hash.split('?')
  const url = new URLSearchParams(hashQuery)
  url.set(name, value)

  window.history.replaceState(
    null,
    null,
    `${window.location.origin}${
      window.location.pathname
    }${hash}?${url.toString()}`,
  )
}

history.delete = function (name) {
  const [hash, hashQuery = ''] = window.location.hash.split('?')
  const url = new URLSearchParams(hashQuery)
  url.delete(name)

  window.history.replaceState(
    null,
    null,
    `${window.location.origin}${
      window.location.pathname
    }${hash}?${url.toString()}`,
  )
}

export { app, store, history, useModel }

render(() => {
  ReactDOM.render(
    <ConfigProvider locale={locale}>
      <App />
    </ConfigProvider>,
    document.getElementById(process.env.REACT_APP_ROOT_ELEMENT_ID),
  )
})
