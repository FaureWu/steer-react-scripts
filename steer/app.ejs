import React, { Suspense } from 'react'
import { Provider } from 'react-redux'
import { HashRouter as Router } from 'react-router-dom'
import zoro from '@opcjs/zoro'
import { createLoading } from '@opcjs/zoro-plugin'
import { zoro as config } from '@/app'
import Loading from '@/components/loading/loading'
import Layout from './layout'
import Routes from './routes'

const app = zoro(config)
<% if (models.length) { -%>
  <% models.forEach(function(model) { -%>
    app.model(require('<%= model %>').default)
  <% }) -%>
<% } -%>
app.use(createLoading())
<% if (plugins.length) { -%>
  <% plugins.forEach(function(plugin) { -%>
    app.use(require('<%= plugin %>').default)
  <% }) -%>
<% } -%>
const store = app.start()

window._APP_ = app
window._STORE_ = store

export default function App() {
  return (
    <Provider store={store}>
      <Suspense fallback={<Loading />}>
        <Layout>
          <Router>
            <Suspense fallback={<Loading />}>
              <Routes />
            </Suspense>
          </Router>
        </Layout>
      </Suspense>
    </Provider>
  )
}